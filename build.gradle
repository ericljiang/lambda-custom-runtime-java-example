/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.4.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'

    id 'io.freefair.lombok' version '4.1.2'

    id 'com.palantir.graal' version '0.6.0-25-g2b2309b'

    id 'com.adarshr.test-logger' version '2.0.0'

    id 'jacoco'
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    implementation 'com.amazonaws:aws-lambda-java-core:1.2.0'
    implementation 'com.google.guava:guava:28.1-jre'
    implementation 'org.slf4j:slf4j-api:1.7.28'
    implementation 'org.slf4j:slf4j-simple:1.7.28'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.apache.httpcomponents:httpclient:4.5.10'
    testImplementation 'org.apache.httpcomponents:httpclient:4.5.10:tests'
    testImplementation 'org.easymock:easymock:4.0.2'
}

graal {
    mainClass 'lambda.custom.runtime.java.example.Main'
    outputName 'runtime'
    option '--no-fallback'
    option '--enable-url-protocols=http'
    option '-Djava.net.preferIPv4Stack=true'
    option '-H:+ReportExceptionStackTraces'
}

task buildZip(type: Zip) {
    from nativeImage
    from processResources {
        include 'bootstrap'
    }
}

task buildDocker(type: Exec) {
    commandLine './buildDocker.sh'
}

build.dependsOn buildDocker

jacocoTestCoverageVerification {
  violationRules {
    rule {
      limit {
        minimum = 0.8
      }
    }
  }
}

task printTestReportLocation {
    doLast {
        println "Unit test report: build/reports/tests/test/index.html"
        println "Coverage report: build/reports/jacoco/test/html/index.html"
    }
}

test.finalizedBy jacocoTestReport
jacocoTestReport.finalizedBy jacocoTestCoverageVerification
jacocoTestReport.finalizedBy printTestReportLocation

sourceCompatibility = 1.8
targetCompatibility = 1.8

// Define the main class for the application
mainClassName = 'lambda.custom.runtime.java.example.Main'
